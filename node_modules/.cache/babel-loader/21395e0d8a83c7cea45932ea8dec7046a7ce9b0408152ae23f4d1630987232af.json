{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, auth } from '@/firebase.js';\nimport ChartComponent from \"@/components/ChartComponent.vue\";\nexport default {\n  name: 'DashboardPage',\n  components: {\n    ChartComponent\n  },\n  data() {\n    return {\n      incomeTotal: 0,\n      expenseTotal: 0,\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchIncomeTotal();\n    this.fetchExpenseTotal();\n    this.fetchAllTransactions();\n  },\n  methods: {\n    fetchIncomeTotal() {\n      const userId = auth.currentUser.uid;\n      db.collection(`users/${userId}/income`).get().then(querySnapshot => {\n        let total = 0;\n        querySnapshot.forEach(doc => {\n          total += doc.data().amount;\n        });\n        this.incomeTotal = total;\n      }).catch(error => {\n        console.error('Error fetching income total:', error);\n      });\n    },\n    fetchExpenseTotal() {\n      const userId = auth.currentUser.uid;\n      db.collection(`users/${userId}/expenses`).get().then(querySnapshot => {\n        let total = 0;\n        querySnapshot.forEach(doc => {\n          total += doc.data().amount;\n        });\n        this.expenseTotal = total;\n      }).catch(error => {\n        console.error('Error fetching expense total:', error);\n      });\n    },\n    fetchAllTransactions() {\n      const userId = auth.currentUser.uid;\n      db.collection(`users/${userId}/income`).get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          transaction.id = doc.id;\n          transaction.type = 'income';\n          this.transactions.push(transaction);\n        });\n      }).catch(error => {\n        console.error('Error fetching income transactions:', error);\n      });\n      db.collection(`users/${userId}/expenses`).get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          transaction.id = doc.id;\n          transaction.type = 'expense';\n          this.transactions.push(transaction);\n        });\n      }).catch(error => {\n        console.error('Error fetching expense transactions:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","auth","ChartComponent","name","components","data","incomeTotal","expenseTotal","transactions","created","fetchIncomeTotal","fetchExpenseTotal","fetchAllTransactions","methods","userId","currentUser","uid","collection","get","then","querySnapshot","total","forEach","doc","amount","catch","error","console","transaction","id","type","push"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Dashboard</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\"> Total Income</div>\r\n            <div class=\"card-body\">\r\n            <h5 class=\"card-title\">${{incomeTotal}}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\"> Total Expenses</div>\r\n            <div class=\"card-body\">\r\n            <h5 class=\"card-title\">${{expenseTotal}}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\"> Total Expenses</div>\r\n            <div class=\"card-body\">\r\n              <chart-component :title=\"'Transactions'\"/>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\"> Recent Transactions</div>\r\n            <div class=\"card-body\">\r\n              <table class=\"table\">\r\n               <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Amount</th>\r\n                  <th>Category</th>\r\n                  <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody> </tbody>\r\n              <tr v-for=\"transaction in transactions\" :key=\"transaction.id\">\r\n                  <td>{{transaction.name}}</td>\r\n                  <td>{{transaction.amount}}</td>\r\n                  <td>{{transaction.category}}</td>\r\n                  <td>{{transaction.date}}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { db, auth } from '@/firebase.js';\r\nimport ChartComponent from \"@/components/ChartComponent.vue\";\r\n\r\nexport default {\r\n  name: 'DashboardPage',\r\n  components: {\r\n    ChartComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      incomeTotal: 0,\r\n      expenseTotal: 0,\r\n      transactions: []\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchIncomeTotal();\r\n    this.fetchExpenseTotal();\r\n    this.fetchAllTransactions();\r\n  },\r\n  methods: {\r\n    fetchIncomeTotal() {\r\n      const userId = auth.currentUser.uid;\r\n      db.collection(`users/${userId}/income`).get()\r\n        .then((querySnapshot) => {\r\n          let total = 0;\r\n          querySnapshot.forEach((doc) => {\r\n            total += doc.data().amount;\r\n          });\r\n          this.incomeTotal = total;\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching income total:', error);\r\n        });\r\n    },\r\n    fetchExpenseTotal() {\r\n      const userId = auth.currentUser.uid;\r\n      db.collection(`users/${userId}/expenses`).get()\r\n        .then((querySnapshot) => {\r\n          let total = 0;\r\n          querySnapshot.forEach((doc) => {\r\n            total += doc.data().amount;\r\n          });\r\n          this.expenseTotal = total;\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching expense total:', error);\r\n        });\r\n    },\r\n    fetchAllTransactions() {\r\n      const userId = auth.currentUser.uid;\r\n      db.collection(`users/${userId}/income`).get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            let transaction = doc.data();\r\n            transaction.id = doc.id;\r\n            transaction.type = 'income';\r\n            this.transactions.push(transaction);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching income transactions:', error);\r\n        });\r\n        \r\n      db.collection(`users/${userId}/expenses`).get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            let transaction = doc.data();\r\n            transaction.id = doc.id;\r\n            transaction.type = 'expense';\r\n            this.transactions.push(transaction);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching expense transactions:', error);\r\n        });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 2rem;\r\n}\r\n\r\n.card-header {\r\n  background-color: #333;\r\n  color: #fff;\r\n}\r\n\r\n.card-body {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.table {\r\n  background-color: #fff;\r\n}\r\n\r\n.table td,\r\n.table th {\r\n  border: 1px solid #e6e6e6;\r\n}\r\n\r\n.table thead th {\r\n  background-color: #333;\r\n  color: #fff;\r\n}\r\n\r\n.card {\r\n  background-color: #fff;\r\n  border: none;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.card-title {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.row {\r\n  margin: 0 -0.5rem;\r\n}\r\n\r\n.col-md-6 {\r\n  padding: 0 0.5rem;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nexport default {\n  name: \"ViewReminders\",\n  data() {\n    return {\n      reminders: []\n    };\n  },\n  created() {\n    this.fetchReminders();\n  },\n  methods: {\n    async fetchReminders() {\n      try {\n        const remindersCollection = await firebase.firestore().collection(\"reminders\").get();\n        this.reminders = remindersCollection.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async deleteReminder(index, id) {\n      try {\n        await firebase.firestore().collection(\"reminders\").doc(id).delete();\n        this.reminders.splice(index, 1);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["firebase","name","data","reminders","created","fetchReminders","methods","remindersCollection","firestore","collection","get","docs","map","doc","id","error","console","deleteReminder","index","delete","splice"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\views\\ViewReminders.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>View Reminders</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Reminder</th>\r\n          <th>Description</th>\r\n          <th>Due Date</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(reminder, index) in reminders\" :key=\"index\">\r\n          <td>{{ reminder.title }}</td>\r\n          <td>{{ reminder.description }}</td>\r\n          <td>{{ reminder.dueDate }}</td>\r\n          <td>\r\n            <router-link :to=\"{ name: 'edit-reminder', params: { id: reminder.id } }\">Edit</router-link>\r\n            <button @click=\"deleteReminder(index, reminder.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <router-link to=\"/add-reminder\">Add Reminder</router-link>\r\n  </div>\r\n</template>\r\n<script>\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nexport default {\r\n  name: \"ViewReminders\",\r\n  data() {\r\n    return {\r\n      reminders: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchReminders();\r\n  },\r\n  methods: {\r\n    async fetchReminders() {\r\n      try {\r\n        const remindersCollection = await firebase.firestore().collection(\"reminders\").get();\r\n        this.reminders = remindersCollection.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async deleteReminder(index, id) {\r\n      try {\r\n        await firebase.firestore().collection(\"reminders\").doc(id).delete();\r\n        this.reminders.splice(index, 1);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AA4BA,OAAOA,QAAO,MAAO,cAAc;AACnC,OAAO,oBAAoB;AAE3B,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,mBAAkB,GAAI,MAAMP,QAAQ,CAACQ,SAAS,CAAC,CAAC,CAACC,UAAU,CAAC,WAAW,CAAC,CAACC,GAAG,CAAC,CAAC;QACpF,IAAI,CAACP,SAAQ,GAAII,mBAAmB,CAACI,IAAI,CAACC,GAAG,CAACC,GAAE,KAAM;UAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;UAAE,GAAGD,GAAG,CAACX,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC;MACvF,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAME,cAAcA,CAACC,KAAK,EAAEJ,EAAE,EAAE;MAC9B,IAAI;QACF,MAAMd,QAAQ,CAACQ,SAAS,CAAC,CAAC,CAACC,UAAU,CAAC,WAAW,CAAC,CAACI,GAAG,CAACC,EAAE,CAAC,CAACK,MAAM,CAAC,CAAC;QACnE,IAAI,CAAChB,SAAS,CAACiB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACjC,EAAE,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
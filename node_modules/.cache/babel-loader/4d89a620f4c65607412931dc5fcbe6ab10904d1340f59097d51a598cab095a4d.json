{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db } from '@/firebase.js';\nimport ChartComponent from '@/components/ChartComponent.vue';\nexport default {\n  name: 'DashboardPage',\n  components: {\n    ChartComponent\n  },\n  data() {\n    return {\n      incomeTotal: 0,\n      expenseTotal: 0,\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchIncomeTotal();\n    this.fetchExpenseTotal();\n    this.fetchAllTransactions();\n  },\n  methods: {\n    fetchIncomeTotal() {\n      db.collection('income').get().then(querySnapshot => {\n        let total = 0;\n        querySnapshot.forEach(doc => {\n          total += doc.data().amount;\n        });\n        this.incomeTotal = total;\n      }).catch(error => {\n        console.error('Error fetching income total:', error);\n      });\n    },\n    fetchExpenseTotal() {\n      db.collection('expenses').get().then(querySnapshot => {\n        let total = 0;\n        querySnapshot.forEach(doc => {\n          total += doc.data().amount;\n        });\n        this.expenseTotal = total;\n      }).catch(error => {\n        console.error('Error fetching expense total:', error);\n      });\n    },\n    fetchAllTransactions() {\n      db.collection('income').get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          transaction.id = doc.id;\n          transaction.type = 'income';\n          this.transactions.push(transaction);\n        });\n      }).catch(error => {\n        console.error('Error fetching income transactions:', error);\n      });\n      db.collection('expenses').get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          transaction.id = doc.id;\n          transaction.type = 'expense';\n          this.transactions.push(transaction);\n        });\n      }).catch(error => {\n        console.error('Error fetching expense transactions:', error);\n      });\n    }\n  },\n  computed: {\n    chartData() {\n      let data = {\n        income: 0,\n        expense: 0\n      };\n      this.transactions.forEach(transaction => {\n        if (transaction.type === 'income') {\n          data.income += transaction.amount;\n        } else {\n          data.expense += transaction.amount;\n        }\n      });\n      return [{\n        label: 'Income',\n        value: data.income\n      }, {\n        label: 'Expense',\n        value: data.expense\n      }];\n    }\n  }\n};","map":{"version":3,"names":["db","ChartComponent","name","components","data","incomeTotal","expenseTotal","transactions","created","fetchIncomeTotal","fetchExpenseTotal","fetchAllTransactions","methods","collection","get","then","querySnapshot","total","forEach","doc","amount","catch","error","console","transaction","id","type","push","computed","chartData","income","expense","label","value"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Dashboard</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\"> Total Income</div>\r\n            <div class=\"card-body\">\r\n            <h5 class=\"card-title\">${{incomeTotal}}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\"> Total Expenses</div>\r\n            <div class=\"card-body\">\r\n            <h5 class=\"card-title\">${{expenseTotal}}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\"> Recent Transactions</div>\r\n            <div class=\"card-body\">\r\n              <table class=\"table\">\r\n               <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Amount</th>\r\n                  <th>Category</th>\r\n                  <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody> </tbody>\r\n              <tr v-for=\"transaction in transactions\" :key=\"transaction.id\">\r\n                  <td>{{transaction.name}}</td>\r\n                  <td>{{transaction.amount}}</td>\r\n                  <td>{{transaction.category}}</td>\r\n                  <td>{{transaction.date}}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n          <chart-component :data=\"chartData\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '@/firebase.js';\r\nimport ChartComponent from '@/components/ChartComponent.vue';\r\n\r\nexport default {\r\n  name: 'DashboardPage',\r\n  components: {\r\n    ChartComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      incomeTotal: 0,\r\n      expenseTotal: 0,\r\n      transactions: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchIncomeTotal();\r\n    this.fetchExpenseTotal();\r\nthis.fetchAllTransactions();\r\n},\r\nmethods: {\r\nfetchIncomeTotal() {\r\ndb.collection('income')\r\n.get()\r\n.then((querySnapshot) => {\r\nlet total = 0;\r\nquerySnapshot.forEach((doc) => {\r\ntotal += doc.data().amount;\r\n});\r\nthis.incomeTotal = total;\r\n})\r\n.catch((error) => {\r\nconsole.error('Error fetching income total:', error);\r\n});\r\n},\r\nfetchExpenseTotal() {\r\ndb.collection('expenses')\r\n.get()\r\n.then((querySnapshot) => {\r\nlet total = 0;\r\nquerySnapshot.forEach((doc) => {\r\ntotal += doc.data().amount;\r\n});\r\nthis.expenseTotal = total;\r\n})\r\n.catch((error) => {\r\nconsole.error('Error fetching expense total:', error);\r\n});\r\n},\r\nfetchAllTransactions() {\r\ndb.collection('income')\r\n.get()\r\n.then((querySnapshot) => {\r\nquerySnapshot.forEach((doc) => {\r\nlet transaction = doc.data();\r\ntransaction.id = doc.id;\r\ntransaction.type = 'income';\r\nthis.transactions.push(transaction);\r\n});\r\n})\r\n.catch((error) => {\r\nconsole.error('Error fetching income transactions:', error);\r\n});\r\ndb.collection('expenses')\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        let transaction = doc.data();\r\n        transaction.id = doc.id;\r\n        transaction.type = 'expense';\r\n        this.transactions.push(transaction);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error fetching expense transactions:', error);\r\n    });\r\n},\r\n},\r\ncomputed: {\r\nchartData() {\r\nlet data = { income: 0, expense: 0 };\r\nthis.transactions.forEach((transaction) => {\r\nif (transaction.type === 'income') {\r\ndata.income += transaction.amount;\r\n} else {\r\ndata.expense += transaction.amount;\r\n}\r\n});\r\nreturn [{ label: 'Income', value: data.income }, { label: 'Expense', value: data.expense }];\r\n},\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding: 2rem;\r\n}\r\n\r\n.card-header {\r\n  background-color: #333;\r\n  color: #fff;\r\n}\r\n\r\n.card-body {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.table {\r\n  background-color: #fff;\r\n}\r\n\r\n.table td,\r\n.table th {\r\n  border: 1px solid #e6e6e6;\r\n}\r\n\r\n.table thead th {\r\n  background-color: #333;\r\n  color: #fff;\r\n}\r\n\r\n.card {\r\n  background-color: #fff;\r\n  border: none;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.card-title {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.row {\r\n  margin: 0 -0.5rem;\r\n}\r\n\r\n.col-md-6 {\r\n  padding: 0 0.5rem;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
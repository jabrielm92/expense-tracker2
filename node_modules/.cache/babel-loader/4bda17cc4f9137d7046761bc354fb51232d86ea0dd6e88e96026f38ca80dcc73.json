{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, auth } from '@/firebase.js';\nimport 'firebase/firestore';\nexport default {\n  name: 'DashboardPage',\n  data() {\n    return {\n      expenses: [],\n      income: []\n    };\n  },\n  computed: {\n    totalExpenses() {\n      return this.expenses.reduce((total, expense) => total + parseFloat(expense.amount), 0).toFixed(2);\n    },\n    totalIncome() {\n      return this.income.reduce((total, income) => total + parseFloat(income.amount), 0).toFixed(2);\n    },\n    recentTransactions() {\n      const transactions = this.income;\n      transactions.sort((a, b) => new Date(b.date) - new Date(a.date));\n      return transactions.slice(0, 5);\n    }\n  },\n  created() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        this.fetchIncome(user.uid);\n      }\n    });\n    this.$on('income-added', income => {\n      this.income.push(income);\n    });\n  },\n  methods: {\n    fetchIncome(uid) {\n      db.collection('income').where('user_id', '==', uid).get().then(querySnapshot => {\n        const income = [];\n        querySnapshot.forEach(doc => {\n          income.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        this.income = income;\n      }).catch(error => console.log(error));\n    }\n  }\n};","map":{"version":3,"names":["db","auth","name","data","expenses","income","computed","totalExpenses","reduce","total","expense","parseFloat","amount","toFixed","totalIncome","recentTransactions","transactions","sort","a","b","Date","date","slice","created","onAuthStateChanged","user","fetchIncome","uid","$on","push","methods","collection","where","get","then","querySnapshot","forEach","doc","id","catch","error","console","log"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <h3>Total Income: ${{ totalIncome }}</h3>\r\n      </div>\r\n      <div class=\"col-md-6 text-right\">\r\n        <router-link to=\"/add-income\" class=\"btn btn-primary\">Add Income</router-link>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <h4>Recent Transactions</h4>\r\n    <div v-if=\"recentTransactions.length === 0\">No transactions to display.</div>\r\n    <ul v-else>\r\n      <li v-for=\"transaction in recentTransactions\" :key=\"transaction.id\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">{{ transaction.name }}</div>\r\n          <div class=\"col-md-2 text-right\">{{ transaction.category }}</div>\r\n          <div class=\"col-md-2 text-right\">{{ transaction.amount }}</div>\r\n          <div class=\"col-md-2 text-right\">{{ transaction.date }}</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db, auth } from '@/firebase.js';\r\nimport 'firebase/firestore'\r\n\r\nexport default {\r\n  name: 'DashboardPage',\r\n  data() {\r\n    return {\r\n      expenses: [],\r\n      income: []\r\n    }\r\n  },\r\n  computed: {\r\n    totalExpenses() {\r\n      return this.expenses.reduce((total, expense) => total + parseFloat(expense.amount), 0).toFixed(2)\r\n    },\r\n    totalIncome() {\r\n      return this.income.reduce((total, income) => total + parseFloat(income.amount), 0).toFixed(2)\r\n    },\r\n    recentTransactions() {\r\n      const transactions = this.income\r\n      transactions.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n      return transactions.slice(0, 5)\r\n    }\r\n  },\r\n  created() {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.fetchIncome(user.uid)\r\n      }\r\n    })\r\n    this.$on('income-added', (income) => {\r\n      this.income.push(income)\r\n    })\r\n  },\r\n  methods: {\r\n    fetchIncome(uid) {\r\n      db.collection('income').where('user_id', '==', uid).get()\r\n        .then(querySnapshot => {\r\n          const income = []\r\n          querySnapshot.forEach(doc => {\r\n            income.push({ id: doc.id, ...doc.data() })\r\n          })\r\n          this.income = income\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":";AA2BA,SAASA,EAAE,EAAEC,IAAG,QAAS,eAAe;AACxC,OAAO,oBAAmB;AAE1B,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,QAAQ,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,OAAO,KAAKD,KAAI,GAAIE,UAAU,CAACD,OAAO,CAACE,MAAM,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAClG,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACT,MAAM,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEJ,MAAM,KAAKI,KAAI,GAAIE,UAAU,CAACN,MAAM,CAACO,MAAM,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC9F,CAAC;IACDE,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,YAAW,GAAI,IAAI,CAACX,MAAK;MAC/BW,YAAY,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,IAAI,IAAID,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC;MAC/D,OAAOL,YAAY,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC;IAChC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRtB,IAAI,CAACuB,kBAAkB,CAACC,IAAG,IAAK;MAC9B,IAAIA,IAAI,EAAE;QACR,IAAI,CAACC,WAAW,CAACD,IAAI,CAACE,GAAG;MAC3B;IACF,CAAC;IACD,IAAI,CAACC,GAAG,CAAC,cAAc,EAAGvB,MAAM,IAAK;MACnC,IAAI,CAACA,MAAM,CAACwB,IAAI,CAACxB,MAAM;IACzB,CAAC;EACH,CAAC;EACDyB,OAAO,EAAE;IACPJ,WAAWA,CAACC,GAAG,EAAE;MACf3B,EAAE,CAAC+B,UAAU,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,SAAS,EAAE,IAAI,EAAEL,GAAG,CAAC,CAACM,GAAG,CAAC,EACrDC,IAAI,CAACC,aAAY,IAAK;QACrB,MAAM9B,MAAK,GAAI,EAAC;QAChB8B,aAAa,CAACC,OAAO,CAACC,GAAE,IAAK;UAC3BhC,MAAM,CAACwB,IAAI,CAAC;YAAES,EAAE,EAAED,GAAG,CAACC,EAAE;YAAE,GAAGD,GAAG,CAAClC,IAAI,CAAC;UAAE,CAAC;QAC3C,CAAC;QACD,IAAI,CAACE,MAAK,GAAIA,MAAK;MACrB,CAAC,EACAkC,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
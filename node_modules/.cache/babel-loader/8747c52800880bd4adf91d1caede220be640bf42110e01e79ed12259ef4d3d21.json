{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard-page\"\n};\nconst _hoisted_2 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Total Income\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Total Expenses\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"dashboard-card\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Recent Transactions\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Welcome to your Dashboard, \" + _toDisplayString(_ctx.$store.state.user.displayName) + \"!\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"p\", null, _toDisplayString($options.totalIncome), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"p\", null, _toDisplayString($options.totalExpenses), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.recentTransactions, transaction => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: transaction.id\n    }, _toDisplayString(transaction.name) + \" - \" + _toDisplayString(transaction.amount) + \" - \" + _toDisplayString(transaction.date), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","_ctx","$store","state","user","displayName","_hoisted_2","_hoisted_3","$options","totalIncome","_hoisted_4","_hoisted_5","totalExpenses","_hoisted_6","_hoisted_7","_Fragment","_renderList","recentTransactions","transaction","key","id","name","amount","date"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-page\">\r\n    <h1>Welcome to your Dashboard, {{ $store.state.user.displayName }}!</h1>\r\n    <div class=\"dashboard-card\">\r\n      <h2>Total Income</h2>\r\n      <p>{{ totalIncome }}</p>\r\n    </div>\r\n    <div class=\"dashboard-card\">\r\n      <h2>Total Expenses</h2>\r\n      <p>{{ totalExpenses }}</p>\r\n    </div>\r\n    <div class=\"dashboard-card\">\r\n      <h2>Recent Transactions</h2>\r\n      <ul>\r\n        <li v-for=\"transaction in recentTransactions\" :key=\"transaction.id\">\r\n          {{ transaction.name }} - {{ transaction.amount }} - {{ transaction.date }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db, auth } from '@/firebase.js';\r\nimport 'firebase/firestore'\r\n\r\nexport default {\r\n  name: 'DashboardPage',\r\n  data() {\r\n    return {\r\n      expenses: [],\r\n      income: []\r\n    }\r\n  },\r\n  computed: {\r\n    totalExpenses() {\r\n      return this.expenses.reduce((total, expense) => total + parseFloat(expense.amount), 0).toFixed(2)\r\n    },\r\n    totalIncome() {\r\n      return this.income.reduce((total, income) => total + parseFloat(income.amount), 0).toFixed(2)\r\n    },\r\n    recentTransactions() {\r\n      const transactions = [...this.expenses, ...this.income]\r\n      transactions.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n      return transactions.slice(0, 5)\r\n    }\r\n  },\r\n  created() {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.fetchExpenses(user.uid)\r\n        this.fetchIncome(user.uid)\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    fetchExpenses(uid) {\r\n      db.collection('expenses').where('user_id', '==', uid).get()\r\n        .then(querySnapshot => {\r\n          const expenses = []\r\n          querySnapshot.forEach(doc => {\r\n            expenses.push({ id: doc.id, ...doc.data() })\r\n          })\r\n          this.expenses = expenses\r\n        })\r\n        .catch(error => console.log(error))\r\n    },\r\n    fetchIncome(uid) {\r\n      db.collection('income').where('user_id', '==', uid).get()\r\n        .then(querySnapshot => {\r\n          const income = []\r\n          querySnapshot.forEach(doc => {\r\n            income.push({ id: doc.id, ...doc.data() })\r\n          })\r\n          this.income = income\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 30px;\r\n}\r\n\r\n.card {\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card h2 {\r\n  margin-top: 0;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.card p {\r\n  margin-bottom: 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.card .total {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  color: #00bfa5;\r\n}\r\n\r\n.card .subheader {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card .subheader p {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.card .subheader button {\r\n  background-color: #00bfa5;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease-in-out;\r\n}\r\n\r\n.card .subheader button:hover {\r\n  background-color: #009d8a;\r\n}\r\n\r\n.transactions {\r\n  margin-top: 20px;\r\n}\r\n\r\n.transactions h3 {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.transactions table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.transactions th,\r\n.transactions td {\r\n  padding: 10px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.transactions th {\r\n  font-weight: bold;\r\n  color: #333;\r\n  background-color: #f8f8f8;\r\n}\r\n\r\n.transactions tr:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.transactions tr:first-child:hover {\r\n  background-color: transparent;\r\n}\r\n\r\n.transactions td:last-child {\r\n  text-align: right;\r\n}\r\n\r\n.transactions td.total {\r\n  font-weight: bold;\r\n}\r\n\r\n@media screen and (max-width: 767px) {\r\n  .dashboard {\r\n    display: block;\r\n  }\r\n\r\n  .card {\r\n    margin-bottom: 30px;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAgB;gCACzBC,mBAAA,CAAqB,YAAjB,cAAY;;EAGbD,KAAK,EAAC;AAAgB;gCACzBC,mBAAA,CAAuB,YAAnB,gBAAc;;EAGfD,KAAK,EAAC;AAAgB;gCACzBC,mBAAA,CAA4B,YAAxB,qBAAmB;;;uBAX3BC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJF,mBAAA,CAAwE,YAApE,6BAA2B,GAAAG,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,WAAW,IAAG,GAAC,iBACnER,mBAAA,CAGM,OAHNS,UAGM,GAFJC,UAAqB,EACrBV,mBAAA,CAAwB,WAAAG,gBAAA,CAAlBQ,QAAA,CAAAC,WAAW,iB,GAEnBZ,mBAAA,CAGM,OAHNa,UAGM,GAFJC,UAAuB,EACvBd,mBAAA,CAA0B,WAAAG,gBAAA,CAApBQ,QAAA,CAAAI,aAAa,iB,GAErBf,mBAAA,CAOM,OAPNgB,UAOM,GANJC,UAA4B,EAC5BjB,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKiB,SAAA,QAAAC,WAAA,CAFqBR,QAAA,CAAAS,kBAAkB,EAAjCC,WAAW;yBAAtBpB,mBAAA,CAEK;MAF0CqB,GAAG,EAAED,WAAW,CAACE;wBAC3DF,WAAW,CAACG,IAAI,IAAG,KAAG,GAAArB,gBAAA,CAAGkB,WAAW,CAACI,MAAM,IAAG,KAAG,GAAAtB,gBAAA,CAAGkB,WAAW,CAACK,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db, auth } from '@/firebase.js';\nimport eventBus from '@/eventBus.js';\nexport default {\n  name: 'DashboardPage',\n  data() {\n    return {\n      expenses: [],\n      income: [],\n      totalIncome: 0 // Initialize totalIncome to 0\n    };\n  },\n\n  created() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        this.fetchExpenses(user.uid);\n        this.fetchIncome(user.uid);\n      }\n    });\n    // Listen for the 'income-added' event and update the totalIncome\n    eventBus.$on('income-added', ({\n      amount\n    }) => {\n      this.totalIncome += parseFloat(amount);\n    });\n  },\n  methods: {\n    fetchExpenses(uid) {\n      db.collection('expenses').where('user_id', '==', uid).get().then(querySnapshot => {\n        const expenses = [];\n        querySnapshot.forEach(doc => {\n          expenses.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        this.expenses = expenses;\n      }).catch(error => console.log(error));\n    },\n    fetchIncome(uid) {\n      db.collection('income').where('user_id', '==', uid).get().then(querySnapshot => {\n        const income = [];\n        querySnapshot.forEach(doc => {\n          income.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        this.income = income;\n        // Calculate the total income by adding up all the amounts\n        this.totalIncome = income.reduce((total, {\n          amount\n        }) => total + parseFloat(amount), 0);\n      }).catch(error => console.log(error));\n    }\n  }\n};","map":{"version":3,"names":["db","auth","eventBus","name","data","expenses","income","totalIncome","created","onAuthStateChanged","user","fetchExpenses","uid","fetchIncome","$on","amount","parseFloat","methods","collection","where","get","then","querySnapshot","forEach","doc","push","id","catch","error","console","log","reduce","total"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Dashboard</h1>\r\n    <p>Total Expenses: ${{ totalExpenses }}</p>\r\n    <p>Total Income: ${{ totalIncome }}</p>\r\n    <h2>Recent Transactions</h2>\r\n    <ul>\r\n      <li v-for=\"transaction in recentTransactions\" :key=\"transaction.id\">\r\n        <span>{{ transaction.name }} - ${{ transaction.amount }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db, auth } from '@/firebase.js';\r\nimport eventBus from '@/eventBus.js'\r\n\r\nexport default {\r\n  name: 'DashboardPage',\r\n  data() {\r\n    return {\r\n      expenses: [],\r\n      income: [],\r\n      totalIncome: 0, // Initialize totalIncome to 0\r\n    }\r\n  },\r\n  created() {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.fetchExpenses(user.uid)\r\n        this.fetchIncome(user.uid)\r\n      }\r\n    })\r\n    // Listen for the 'income-added' event and update the totalIncome\r\n    eventBus.$on('income-added', ({ amount }) => {\r\n      this.totalIncome += parseFloat(amount)\r\n    })\r\n  },\r\n  methods: {\r\n    fetchExpenses(uid) {\r\n      db.collection('expenses').where('user_id', '==', uid).get()\r\n        .then(querySnapshot => {\r\n          const expenses = []\r\n          querySnapshot.forEach(doc => {\r\n            expenses.push({ id: doc.id, ...doc.data() })\r\n          })\r\n          this.expenses = expenses\r\n        })\r\n        .catch(error => console.log(error))\r\n    },\r\n    fetchIncome(uid) {\r\n      db.collection('income').where('user_id', '==', uid).get()\r\n        .then(querySnapshot => {\r\n          const income = []\r\n          querySnapshot.forEach(doc => {\r\n            income.push({ id: doc.id, ...doc.data() })\r\n          })\r\n          this.income = income\r\n          // Calculate the total income by adding up all the amounts\r\n          this.totalIncome = income.reduce((total, { amount }) => total + parseFloat(amount), 0)\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n"],"mappings":";AAeA,SAASA,EAAE,EAAEC,IAAG,QAAS,eAAe;AACxC,OAAOC,QAAO,MAAO,eAAc;AAEnC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,CAAC,CAAE;IAClB;EACF,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACRP,IAAI,CAACQ,kBAAkB,CAACC,IAAG,IAAK;MAC9B,IAAIA,IAAI,EAAE;QACR,IAAI,CAACC,aAAa,CAACD,IAAI,CAACE,GAAG;QAC3B,IAAI,CAACC,WAAW,CAACH,IAAI,CAACE,GAAG;MAC3B;IACF,CAAC;IACD;IACAV,QAAQ,CAACY,GAAG,CAAC,cAAc,EAAE,CAAC;MAAEC;IAAO,CAAC,KAAK;MAC3C,IAAI,CAACR,WAAU,IAAKS,UAAU,CAACD,MAAM;IACvC,CAAC;EACH,CAAC;EACDE,OAAO,EAAE;IACPN,aAAaA,CAACC,GAAG,EAAE;MACjBZ,EAAE,CAACkB,UAAU,CAAC,UAAU,CAAC,CAACC,KAAK,CAAC,SAAS,EAAE,IAAI,EAAEP,GAAG,CAAC,CAACQ,GAAG,CAAC,EACvDC,IAAI,CAACC,aAAY,IAAK;QACrB,MAAMjB,QAAO,GAAI,EAAC;QAClBiB,aAAa,CAACC,OAAO,CAACC,GAAE,IAAK;UAC3BnB,QAAQ,CAACoB,IAAI,CAAC;YAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;YAAE,GAAGF,GAAG,CAACpB,IAAI,CAAC;UAAE,CAAC;QAC7C,CAAC;QACD,IAAI,CAACC,QAAO,GAAIA,QAAO;MACzB,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtC,CAAC;IACDf,WAAWA,CAACD,GAAG,EAAE;MACfZ,EAAE,CAACkB,UAAU,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC,SAAS,EAAE,IAAI,EAAEP,GAAG,CAAC,CAACQ,GAAG,CAAC,EACrDC,IAAI,CAACC,aAAY,IAAK;QACrB,MAAMhB,MAAK,GAAI,EAAC;QAChBgB,aAAa,CAACC,OAAO,CAACC,GAAE,IAAK;UAC3BlB,MAAM,CAACmB,IAAI,CAAC;YAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;YAAE,GAAGF,GAAG,CAACpB,IAAI,CAAC;UAAE,CAAC;QAC3C,CAAC;QACD,IAAI,CAACE,MAAK,GAAIA,MAAK;QACnB;QACA,IAAI,CAACC,WAAU,GAAID,MAAM,CAACyB,MAAM,CAAC,CAACC,KAAK,EAAE;UAAEjB;QAAO,CAAC,KAAKiB,KAAI,GAAIhB,UAAU,CAACD,MAAM,CAAC,EAAE,CAAC;MACvF,CAAC,EACAY,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
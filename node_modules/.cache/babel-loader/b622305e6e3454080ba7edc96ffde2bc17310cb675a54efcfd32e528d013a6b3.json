{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Line, Bar } from 'vue-chartjs';\nimport { db, auth } from '@/firebase.js';\nexport default {\n  name: 'ChartComponent',\n  components: {\n    LineChart: Line,\n    BarChart: Bar\n  },\n  data() {\n    return {\n      chartData: {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [{\n          label: 'Income',\n          backgroundColor: '#3cba9f',\n          data: []\n        }, {\n          label: 'Expenses',\n          backgroundColor: '#c45850',\n          data: []\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }],\n          xAxes: [{\n            type: 'category',\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']\n          }]\n        }\n      },\n      graphData: {\n        labels: [],\n        datasets: [{\n          label: 'Transactions',\n          backgroundColor: '#3e95cd',\n          data: []\n        }]\n      },\n      graphOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  },\n  created() {\n    this.fetchChartData();\n    this.fetchGraphData();\n  },\n  methods: {\n    fetchChartData() {\n      const userId = auth.currentUser.uid;\n      db.collection(`users/${userId}/income`).get().then(querySnapshot => {\n        let incomeData = [];\n        querySnapshot.forEach(doc => {\n          incomeData.push(doc.data().amount);\n        });\n        this.chartData.datasets[0].data = incomeData;\n      }).catch(error => {\n        console.error('Error fetching income data:', error);\n      });\n      db.collection(`users/${userId}/expenses`).get().then(querySnapshot => {\n        let expenseData = [];\n        querySnapshot.forEach(doc => {\n          expenseData.push(doc.data().amount);\n        });\n        this.chartData.datasets[1].data = expenseData;\n      }).catch(error => {\n        console.error('Error fetching expense data:', error);\n      });\n    },\n    fetchGraphData() {\n      const userId = auth.currentUser.uid;\n      db.collection(`users/${userId}/transactions`).orderBy('date', 'desc').limit(5).get().then(querySnapshot => {\n        let labels = [];\n        let transactionData = [];\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          labels.push(transaction.date);\n          transactionData.push(transaction.amount);\n        });\n        this.graphData.labels = labels;\n        this.graphData.datasets[0].data = transactionData;\n      }).catch(error => {\n        console.error('Error fetching transaction data:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Line","Bar","db","auth","name","components","LineChart","BarChart","data","chartData","labels","datasets","label","backgroundColor","chartOptions","responsive","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","xAxes","type","graphData","graphOptions","created","fetchChartData","fetchGraphData","methods","userId","currentUser","uid","collection","get","then","querySnapshot","incomeData","forEach","doc","push","amount","catch","error","console","expenseData","orderBy","limit","transactionData","transaction","date"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\ChartComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <line-chart :data=\"chartData\" :options=\"chartOptions\"></line-chart>\r\n      <bar-chart :data=\"graphData\" :options=\"graphOptions\"></bar-chart>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { Line, Bar } from 'vue-chartjs'\r\n  import { db, auth } from '@/firebase.js'\r\n  \r\n  export default {\r\n    name: 'ChartComponent',\r\n    components: {\r\n      LineChart: Line,\r\n      BarChart: Bar\r\n    },\r\n    data() {\r\n      return {\r\n        chartData: {\r\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n          datasets: [\r\n            {\r\n              label: 'Income',\r\n              backgroundColor: '#3cba9f',\r\n              data: []\r\n            },\r\n            {\r\n              label: 'Expenses',\r\n              backgroundColor: '#c45850',\r\n              data: []\r\n            }\r\n          ]\r\n        },\r\n        chartOptions: {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    yAxes: [{\r\n      ticks: {\r\n        beginAtZero: true\r\n      }\r\n    }],\r\n    xAxes: [{\r\n      type: 'category',\r\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']\r\n    }]\r\n  }\r\n},\r\n        graphData: {\r\n          labels: [],\r\n          datasets: [\r\n            {\r\n              label: 'Transactions',\r\n              backgroundColor: '#3e95cd',\r\n              data: []\r\n            }\r\n          ]\r\n        },\r\n        graphOptions: {\r\n          responsive: true,\r\n          maintainAspectRatio: false\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchChartData()\r\n      this.fetchGraphData()\r\n    },\r\n    methods: {\r\n        fetchChartData() {\r\n  const userId = auth.currentUser.uid;\r\n  db.collection(`users/${userId}/income`).get()\r\n    .then((querySnapshot) => {\r\n      let incomeData = []\r\n      querySnapshot.forEach((doc) => {\r\n        incomeData.push(doc.data().amount)\r\n      })\r\n      this.chartData.datasets[0].data = incomeData\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error fetching income data:', error)\r\n    })\r\n\r\n  db.collection(`users/${userId}/expenses`).get()\r\n    .then((querySnapshot) => {\r\n      let expenseData = []\r\n      querySnapshot.forEach((doc) => {\r\n        expenseData.push(doc.data().amount)\r\n      })\r\n      this.chartData.datasets[1].data = expenseData\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error fetching expense data:', error)\r\n    })\r\n},\r\nfetchGraphData() {\r\n  const userId = auth.currentUser.uid;\r\n  db.collection(`users/${userId}/transactions`).orderBy('date', 'desc').limit(5).get()\r\n    .then((querySnapshot) => {\r\n      let labels = []\r\n      let transactionData = []\r\n      querySnapshot.forEach((doc) => {\r\n        let transaction = doc.data()\r\n        labels.push(transaction.date)\r\n        transactionData.push(transaction.amount)\r\n      })\r\n      this.graphData.labels = labels\r\n      this.graphData.datasets[0].data = transactionData\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error fetching transaction data:', error)\r\n    })\r\n},\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":";AAQE,SAASA,IAAI,EAAEC,GAAE,QAAS,aAAY;AACtC,SAASC,EAAE,EAAEC,IAAG,QAAS,eAAc;AAEvC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IACVC,SAAS,EAAEN,IAAI;IACfO,QAAQ,EAAEN;EACZ,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;QACxEC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,QAAQ;UACfC,eAAe,EAAE,SAAS;UAC1BL,IAAI,EAAE;QACR,CAAC,EACD;UACEI,KAAK,EAAE,UAAU;UACjBC,eAAe,EAAE,SAAS;UAC1BL,IAAI,EAAE;QACR;MAEJ,CAAC;MACDM,YAAY,EAAE;QACpBC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACNC,KAAK,EAAE,CAAC;YACNC,KAAK,EAAE;cACLC,WAAW,EAAE;YACf;UACF,CAAC,CAAC;UACFC,KAAK,EAAE,CAAC;YACNC,IAAI,EAAE,UAAU;YAChBZ,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;UAC1D,CAAC;QACH;MACF,CAAC;MACOa,SAAS,EAAE;QACTb,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,cAAc;UACrBC,eAAe,EAAE,SAAS;UAC1BL,IAAI,EAAE;QACR;MAEJ,CAAC;MACDgB,YAAY,EAAE;QACZT,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;MACvB;IACF;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC;IACpB,IAAI,CAACC,cAAc,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACLF,cAAcA,CAAA,EAAG;MACvB,MAAMG,MAAK,GAAI1B,IAAI,CAAC2B,WAAW,CAACC,GAAG;MACnC7B,EAAE,CAAC8B,UAAU,CAAE,SAAQH,MAAO,SAAQ,CAAC,CAACI,GAAG,CAAC,EACzCC,IAAI,CAAEC,aAAa,IAAK;QACvB,IAAIC,UAAS,GAAI,EAAC;QAClBD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC7BF,UAAU,CAACG,IAAI,CAACD,GAAG,CAAC9B,IAAI,CAAC,CAAC,CAACgC,MAAM;QACnC,CAAC;QACD,IAAI,CAAC/B,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAG,GAAI4B,UAAS;MAC7C,CAAC,EACAK,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK;MACpD,CAAC;MAEHxC,EAAE,CAAC8B,UAAU,CAAE,SAAQH,MAAO,WAAU,CAAC,CAACI,GAAG,CAAC,EAC3CC,IAAI,CAAEC,aAAa,IAAK;QACvB,IAAIS,WAAU,GAAI,EAAC;QACnBT,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC7BM,WAAW,CAACL,IAAI,CAACD,GAAG,CAAC9B,IAAI,CAAC,CAAC,CAACgC,MAAM;QACpC,CAAC;QACD,IAAI,CAAC/B,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAG,GAAIoC,WAAU;MAC9C,CAAC,EACAH,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK;MACrD,CAAC;IACL,CAAC;IACDf,cAAcA,CAAA,EAAG;MACf,MAAME,MAAK,GAAI1B,IAAI,CAAC2B,WAAW,CAACC,GAAG;MACnC7B,EAAE,CAAC8B,UAAU,CAAE,SAAQH,MAAO,eAAc,CAAC,CAACgB,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACb,GAAG,CAAC,EAChFC,IAAI,CAAEC,aAAa,IAAK;QACvB,IAAIzB,MAAK,GAAI,EAAC;QACd,IAAIqC,eAAc,GAAI,EAAC;QACvBZ,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC7B,IAAIU,WAAU,GAAIV,GAAG,CAAC9B,IAAI,CAAC;UAC3BE,MAAM,CAAC6B,IAAI,CAACS,WAAW,CAACC,IAAI;UAC5BF,eAAe,CAACR,IAAI,CAACS,WAAW,CAACR,MAAM;QACzC,CAAC;QACD,IAAI,CAACjB,SAAS,CAACb,MAAK,GAAIA,MAAK;QAC7B,IAAI,CAACa,SAAS,CAACZ,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAG,GAAIuC,eAAc;MAClD,CAAC,EACAN,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK;MACzD,CAAC;IACL;EACI;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
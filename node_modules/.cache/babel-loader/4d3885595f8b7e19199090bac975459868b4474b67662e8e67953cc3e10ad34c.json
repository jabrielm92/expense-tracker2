{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as d3 from \"d3\";\nimport { db, auth } from '@/firebase.js';\nexport default {\n  name: \"ChartComponent\",\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  mounted() {\n    this.fetchAllTransactions();\n  },\n  methods: {\n    fetchAllTransactions() {\n      const userId = auth.currentUser.uid;\n      db.collection(`users/${userId}/income`).get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          transaction.id = doc.id;\n          transaction.type = \"income\";\n          this.transactions.push(transaction);\n        });\n      }).catch(error => {\n        console.error(\"Error fetching income transactions:\", error);\n      });\n      db.collection(`users/${userId}/expenses`).get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          transaction.id = doc.id;\n          transaction.type = \"expense\";\n          this.transactions.push(transaction);\n        });\n        this.drawChart();\n      }).catch(error => {\n        console.error(\"Error fetching expense transactions:\", error);\n      });\n    },\n    drawChart() {\n      // Calculate the total income and expense amounts\n      let incomeTotal = 0;\n      let expenseTotal = 0;\n      this.transactions.forEach(transaction => {\n        if (transaction.type === \"income\") {\n          incomeTotal += transaction.amount;\n        } else if (transaction.type === \"expense\") {\n          expenseTotal += transaction.amount;\n        }\n      });\n\n      // Create the data array for the pie chart\n      let data = [{\n        label: \"Income\",\n        value: incomeTotal\n      }, {\n        label: \"Expenses\",\n        value: expenseTotal\n      }];\n\n      // Set up the dimensions of the SVG container\n      const svg = d3.select(this.$refs.svg);\n      const width = svg.node().getBoundingClientRect().width;\n      const height = width;\n\n      // Set up the pie chart layout\n      const pie = d3.pie().value(d => d.value);\n\n      // Set up the arc generator\n      const arc = d3.arc().innerRadius(0).outerRadius(width / 2);\n\n      // Set up the color scale\n      const color = d3.scaleOrdinal().domain([\"Income\", \"Expenses\"]).range([\"#1f77b4\", \"#d62728\"]);\n\n      // Create the pie chart\n      svg.append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`).selectAll(\"path\").data(pie(data)).join(\"path\").attr(\"d\", arc).attr(\"fill\", d => color(d.data.label)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", \"2px\").attr(\"class\", \"chart-slice\");\n    }\n  }\n};","map":{"version":3,"names":["d3","db","auth","name","data","transactions","mounted","fetchAllTransactions","methods","userId","currentUser","uid","collection","get","then","querySnapshot","forEach","doc","transaction","id","type","push","catch","error","console","drawChart","incomeTotal","expenseTotal","amount","label","value","svg","select","$refs","width","node","getBoundingClientRect","height","pie","d","arc","innerRadius","outerRadius","color","scaleOrdinal","domain","range","append","attr","selectAll","join"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\ChartComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"chart-container\">\r\n      <svg ref=\"svg\"></svg>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as d3 from \"d3\";\r\n  import { db, auth } from '@/firebase.js';\r\n  \r\n  export default {\r\n    name: \"ChartComponent\",\r\n    data() {\r\n      return {\r\n        transactions: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchAllTransactions();\r\n    },\r\n    methods: {\r\n      fetchAllTransactions() {\r\n        const userId = auth.currentUser.uid;\r\n        db.collection(`users/${userId}/income`)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              let transaction = doc.data();\r\n              transaction.id = doc.id;\r\n              transaction.type = \"income\";\r\n              this.transactions.push(transaction);\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching income transactions:\", error);\r\n          });\r\n  \r\n        db.collection(`users/${userId}/expenses`)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n              let transaction = doc.data();\r\n              transaction.id = doc.id;\r\n              transaction.type = \"expense\";\r\n              this.transactions.push(transaction);\r\n            });\r\n            this.drawChart();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching expense transactions:\", error);\r\n          });\r\n      },\r\n      drawChart() {\r\n        // Calculate the total income and expense amounts\r\n        let incomeTotal = 0;\r\n        let expenseTotal = 0;\r\n        this.transactions.forEach((transaction) => {\r\n          if (transaction.type === \"income\") {\r\n            incomeTotal += transaction.amount;\r\n          } else if (transaction.type === \"expense\") {\r\n            expenseTotal += transaction.amount;\r\n          }\r\n        });\r\n  \r\n        // Create the data array for the pie chart\r\n        let data = [\r\n          { label: \"Income\", value: incomeTotal },\r\n          { label: \"Expenses\", value: expenseTotal },\r\n        ];\r\n  \r\n        // Set up the dimensions of the SVG container\r\n        const svg = d3.select(this.$refs.svg);\r\n        const width = svg.node().getBoundingClientRect().width;\r\n        const height = width;\r\n  \r\n        // Set up the pie chart layout\r\n        const pie = d3.pie().value((d) => d.value);\r\n  \r\n        // Set up the arc generator\r\n        const arc = d3.arc().innerRadius(0).outerRadius(width / 2);\r\n  \r\n        // Set up the color scale\r\n        const color = d3.scaleOrdinal().domain([\"Income\", \"Expenses\"]).range([\"#1f77b4\", \"#d62728\"]);\r\n  \r\n        // Create the pie chart\r\n        svg\r\n          .append(\"g\")\r\n          .attr(\"transform\", `translate(${width / 2}, ${height / 2})`)\r\n          .selectAll(\"path\")\r\n          .data(pie(data))\r\n          .join(\"path\")\r\n          .attr(\"d\", arc)\r\n          .attr(\"fill\", (d) => color(d.data.label))\r\n          .attr(\"stroke\", \"#fff\")\r\n          .attr(\"stroke-width\", \"2px\")\r\n          .attr(\"class\", \"chart-slice\");\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
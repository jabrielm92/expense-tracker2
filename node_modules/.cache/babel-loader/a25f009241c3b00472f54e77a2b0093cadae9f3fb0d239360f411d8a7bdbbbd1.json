{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db } from '@/firebase.js';\nexport default {\n  name: 'DashboardPage',\n  data() {\n    return {\n      incomeTotal: 0,\n      expenseTotal: 0,\n      transactions: []\n    };\n  },\n  created() {\n    this.fetchIncomeTotal();\n    this.fetchExpenseTotal();\n    this.fetchAllTransactions();\n  },\n  methods: {\n    fetchIncomeTotal() {\n      db.collection('income').get().then(querySnapshot => {\n        let total = 0;\n        querySnapshot.forEach(doc => {\n          total += doc.data().amount;\n        });\n        this.incomeTotal = total;\n      }).catch(error => {\n        console.error('Error fetching income total:', error);\n      });\n    },\n    fetchExpenseTotal() {\n      db.collection('expenses').get().then(querySnapshot => {\n        let total = 0;\n        querySnapshot.forEach(doc => {\n          total += doc.data().amount;\n        });\n        this.expenseTotal = total;\n      }).catch(error => {\n        console.error('Error fetching expense total:', error);\n      });\n    },\n    fetchAllTransactions() {\n      db.collection('income').get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          transaction.id = doc.id;\n          transaction.type = 'income';\n          this.transactions.push(transaction);\n        });\n      }).catch(error => {\n        console.error('Error fetching income transactions:', error);\n      });\n      db.collection('expenses').get().then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          let transaction = doc.data();\n          transaction.id = doc.id;\n          transaction.type = 'expense';\n          this.transactions.push(transaction);\n        });\n      }).catch(error => {\n        console.error('Error fetching expense transactions:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","name","data","incomeTotal","expenseTotal","transactions","created","fetchIncomeTotal","fetchExpenseTotal","fetchAllTransactions","methods","collection","get","then","querySnapshot","total","forEach","doc","amount","catch","error","console","transaction","id","type","push"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\DashboardPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>Dashboard</h1>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Total Income</h5>\r\n            <p class=\"card-text\">{{incomeTotal}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Total Expenses</h5>\r\n            <p class=\"card-text\">{{expenseTotal}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">All Transactions</h5>\r\n            <ul>\r\n              <li v-for=\"transaction in transactions\" :key=\"transaction.id\">\r\n                {{transaction.name}} - {{transaction.amount}} - {{transaction.category}} - {{transaction.date}}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '@/firebase.js';\r\n\r\nexport default {\r\n  name: 'DashboardPage',\r\n  data() {\r\n    return {\r\n      incomeTotal: 0,\r\n      expenseTotal: 0,\r\n      transactions: []\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchIncomeTotal();\r\n    this.fetchExpenseTotal();\r\n    this.fetchAllTransactions();\r\n  },\r\n  methods: {\r\n    fetchIncomeTotal() {\r\n      db.collection('income').get()\r\n        .then((querySnapshot) => {\r\n          let total = 0;\r\n          querySnapshot.forEach((doc) => {\r\n            total += doc.data().amount;\r\n          });\r\n          this.incomeTotal = total;\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching income total:', error);\r\n        });\r\n    },\r\n    fetchExpenseTotal() {\r\n      db.collection('expenses').get()\r\n        .then((querySnapshot) => {\r\n          let total = 0;\r\n          querySnapshot.forEach((doc) => {\r\n            total += doc.data().amount;\r\n          });\r\n          this.expenseTotal = total;\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching expense total:', error);\r\n        });\r\n    },\r\n    fetchAllTransactions() {\r\n      db.collection('income').get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            let transaction = doc.data();\r\n            transaction.id = doc.id;\r\n            transaction.type = 'income';\r\n            this.transactions.push(transaction);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching income transactions:', error);\r\n        });\r\n        \r\n      db.collection('expenses').get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            let transaction = doc.data();\r\n            transaction.id = doc.id;\r\n            transaction.type = 'expense';\r\n            this.transactions.push(transaction);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching expense transactions:', error);\r\n        });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n"],"mappings":";AAqCA,SAASA,EAAC,QAAS,eAAe;AAElC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,CAAC;MACfC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC7B,CAAC;EACDC,OAAO,EAAE;IACPH,gBAAgBA,CAAA,EAAG;MACjBP,EAAE,CAACW,UAAU,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC,EACzBC,IAAI,CAAEC,aAAa,IAAK;QACvB,IAAIC,KAAI,GAAI,CAAC;QACbD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC7BF,KAAI,IAAKE,GAAG,CAACf,IAAI,CAAC,CAAC,CAACgB,MAAM;QAC5B,CAAC,CAAC;QACF,IAAI,CAACf,WAAU,GAAIY,KAAK;MAC1B,CAAC,EACAI,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACN,CAAC;IACDZ,iBAAiBA,CAAA,EAAG;MAClBR,EAAE,CAACW,UAAU,CAAC,UAAU,CAAC,CAACC,GAAG,CAAC,EAC3BC,IAAI,CAAEC,aAAa,IAAK;QACvB,IAAIC,KAAI,GAAI,CAAC;QACbD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC7BF,KAAI,IAAKE,GAAG,CAACf,IAAI,CAAC,CAAC,CAACgB,MAAM;QAC5B,CAAC,CAAC;QACF,IAAI,CAACd,YAAW,GAAIW,KAAK;MAC3B,CAAC,EACAI,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC;IACDX,oBAAoBA,CAAA,EAAG;MACrBT,EAAE,CAACW,UAAU,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC,EACzBC,IAAI,CAAEC,aAAa,IAAK;QACvBA,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC7B,IAAIK,WAAU,GAAIL,GAAG,CAACf,IAAI,CAAC,CAAC;UAC5BoB,WAAW,CAACC,EAAC,GAAIN,GAAG,CAACM,EAAE;UACvBD,WAAW,CAACE,IAAG,GAAI,QAAQ;UAC3B,IAAI,CAACnB,YAAY,CAACoB,IAAI,CAACH,WAAW,CAAC;QACrC,CAAC,CAAC;MACJ,CAAC,EACAH,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D,CAAC,CAAC;MAEJpB,EAAE,CAACW,UAAU,CAAC,UAAU,CAAC,CAACC,GAAG,CAAC,EAC3BC,IAAI,CAAEC,aAAa,IAAK;QACvBA,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC7B,IAAIK,WAAU,GAAIL,GAAG,CAACf,IAAI,CAAC,CAAC;UAC5BoB,WAAW,CAACC,EAAC,GAAIN,GAAG,CAACM,EAAE;UACvBD,WAAW,CAACE,IAAG,GAAI,SAAS;UAC5B,IAAI,CAACnB,YAAY,CAACoB,IAAI,CAACH,WAAW,CAAC;QACrC,CAAC,CAAC;MACJ,CAAC,EACAH,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CAAC;IACN;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { db } from '@/firebase.js';\nexport default {\n  name: \"ViewReminders\",\n  data() {\n    return {\n      reminders: []\n    };\n  },\n  async created() {\n    try {\n      const remindersCollection = await db.collection(\"reminders\").get();\n      this.reminders = remindersCollection.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  methods: {\n    async deleteReminder(index, id) {\n      try {\n        await db.collection(\"reminders\").doc(id).delete();\n        this.reminders.splice(index, 1);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","name","data","reminders","created","remindersCollection","collection","get","docs","map","doc","id","error","console","methods","deleteReminder","index","delete","splice"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\views\\ViewReminders.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>View Reminders</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Reminder</th>\r\n          <th>Description</th>\r\n          <th>Due Date</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(reminder, index) in reminders\" :key=\"index\">\r\n          <td>{{ reminder.title }}</td>\r\n          <td>{{ reminder.description }}</td>\r\n          <td>{{ reminder.dueDate }}</td>\r\n          <td>\r\n            <router-link :to=\"{ name: 'edit-reminder', params: { id: reminder.id } }\">Edit</router-link>\r\n            <button @click=\"deleteReminder(index, reminder.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <router-link to=\"/add-reminder\">Add Reminder</router-link>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { db } from '@/firebase.js';\r\n\r\nexport default {\r\n  name: \"ViewReminders\",\r\n  data() {\r\n    return {\r\n      reminders: [],\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const remindersCollection = await db.collection(\"reminders\").get();\r\n      this.reminders = remindersCollection.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  },\r\n  methods: {\r\n    async deleteReminder(index, id) {\r\n      try {\r\n        await db.collection(\"reminders\").doc(id).delete();\r\n        this.reminders.splice(index, 1);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"AA4BA,SAASA,EAAC,QAAS,eAAe;AAElC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,mBAAkB,GAAI,MAAML,EAAE,CAACM,UAAU,CAAC,WAAW,CAAC,CAACC,GAAG,CAAC,CAAC;MAClE,IAAI,CAACJ,SAAQ,GAAIE,mBAAmB,CAACG,IAAI,CAACC,GAAG,CAACC,GAAE,KAAM;QAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;QAAE,GAAGD,GAAG,CAACR,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC;IACvF,EAAE,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,cAAcA,CAACC,KAAK,EAAEL,EAAE,EAAE;MAC9B,IAAI;QACF,MAAMX,EAAE,CAACM,UAAU,CAAC,WAAW,CAAC,CAACI,GAAG,CAACC,EAAE,CAAC,CAACM,MAAM,CAAC,CAAC;QACjD,IAAI,CAACd,SAAS,CAACe,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACjC,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
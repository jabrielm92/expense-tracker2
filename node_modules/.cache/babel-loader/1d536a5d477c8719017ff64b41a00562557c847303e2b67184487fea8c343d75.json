{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c38d1522\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chart\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Transactions Breakdown\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_2","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_4"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\components\\ChartComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"chart\">\r\n      <h2>Transactions Breakdown</h2>\r\n      <svg></svg>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { db, auth } from '@/firebase.js';\r\n  import * as d3 from 'd3';\r\n  \r\n  export default {\r\n    name: 'ChartComponent',\r\n    data() {\r\n      return {\r\n        data: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    },\r\n    methods: {\r\n  async fetchTransactions() {\r\n    const userId = auth.currentUser.uid;\r\n    const incomeData = [];\r\n    const expenseData = [];\r\n\r\n    const incomeQuerySnapshot = await db.collection(`users/${userId}/income`).get();\r\n    incomeQuerySnapshot.forEach((doc) => {\r\n      let transaction = doc.data();\r\n      transaction.id = doc.id;\r\n      incomeData.push(transaction);\r\n    });\r\n\r\n    const expenseQuerySnapshot = await db.collection(`users/${userId}/expenses`).get();\r\n    expenseQuerySnapshot.forEach((doc) => {\r\n      let transaction = doc.data();\r\n      transaction.id = doc.id;\r\n      expenseData.push(transaction);\r\n    });\r\n\r\n    const incomeTotal = incomeData.reduce((total, d) => total + d.amount, 0);\r\n    const expenseTotal = expenseData.reduce((total, d) => total + d.amount, 0);\r\n\r\n    const data = [\r\n      { label: 'Income', value: incomeTotal },\r\n      { label: 'Expenses', value: expenseTotal },\r\n    ];\r\n\r\n    const width = 400;\r\n    const height = 400;\r\n    const radius = Math.min(width, height) / 2;\r\n\r\n    const svg = d3.select(this.$refs.chart)\r\n      .append('svg')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\r\n\r\n    const pie = d3.pie()\r\n      .value((d) => d.value);\r\n\r\n    const path = d3.arc()\r\n      .outerRadius(radius - 10)\r\n      .innerRadius(0);\r\n\r\n    const label = d3.arc()\r\n      .outerRadius(radius - 40)\r\n      .innerRadius(radius - 40);\r\n\r\n    const arc = svg.selectAll('arc')\r\n      .data(pie(data))\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'arc');\r\n\r\n    arc.append('path')\r\n      .attr('d', path)\r\n      .attr('fill', (d) => d.data.color);\r\n\r\n    arc.append('text')\r\n      .attr('transform', (d) => `translate(${label.centroid(d)})`)\r\n      .attr('dy', '0.35em')\r\n      .text((d) => d.data.label);\r\n  },\r\n},\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .chart {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n  }\r\n  </style>\r\n  \r\n  \r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAO;gEAChBC,mBAAA,CAA+B,YAA3B,wBAAsB;gEAC1BA,mBAAA,CAAW;oBADXC,UAA+B,EAC/BC,UAAW,C;;uBAFbC,mBAAA,CAGM,OAHNC,UAGM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
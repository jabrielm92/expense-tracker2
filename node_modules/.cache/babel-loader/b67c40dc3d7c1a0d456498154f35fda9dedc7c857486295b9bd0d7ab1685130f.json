{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { db } from '@/firebase.js';\nexport default {\n  data() {\n    return {\n      expenses: [],\n      categories: [],\n      selectedCategory: \"\"\n    };\n  },\n  mounted() {\n    this.fetchExpenses();\n    this.fetchCategories();\n  },\n  methods: {\n    fetchExpenses() {\n      const userId = this.$store.state.user.uid;\n      db.collection(\"users\").doc(userId).collection(\"expenses\").orderBy(\"date\", \"desc\").get().then(querySnapshot => {\n        let expenses = [];\n        querySnapshot.forEach(doc => {\n          expenses.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        this.expenses = expenses;\n      });\n    },\n    fetchCategories() {\n      const userId = this.$store.state.user.uid;\n      db.collection(\"users\").doc(userId).collection(\"categories\").orderBy(\"name\").get().then(querySnapshot => {\n        let categories = [];\n        querySnapshot.forEach(doc => {\n          categories.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        this.categories = categories;\n      });\n    },\n    getCategoryName(categoryId) {\n      const category = this.categories.find(category => category.id === categoryId);\n      return category ? category.name : \"\";\n    }\n  },\n  computed: {\n    filteredExpenses() {\n      return this.selectedCategory ? this.expenses.filter(expense => expense.category_id === this.selectedCategory) : this.expenses;\n    },\n    totalExpenses() {\n      return this.expenses.reduce((total, expense) => total + parseFloat(expense.amount), 0);\n    }\n  }\n};","map":{"version":3,"names":["db","data","expenses","categories","selectedCategory","mounted","fetchExpenses","fetchCategories","methods","userId","$store","state","user","uid","collection","doc","orderBy","get","then","querySnapshot","forEach","push","id","getCategoryName","categoryId","category","find","name","computed","filteredExpenses","filter","expense","category_id","totalExpenses","reduce","total","parseFloat","amount"],"sources":["C:\\Users\\jabri\\Desktop\\expense-tracker2\\src\\views\\ViewExpenses.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2 class=\"text-center my-4\">View Expenses</h2>\r\n    <div class=\"row my-4\">\r\n  <div class=\"col-md-4 offset-md-4\">\r\n    <select class=\"form-control\" v-model=\"selectedCategory\">\r\n      <option value=\"\">All Categories</option>\r\n      <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">{{ category.name }}</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-8 offset-md-2\">\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Description</th>\r\n          <th>Category</th>\r\n          <th>Amount</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"expense in filteredExpenses\" :key=\"expense.id\">\r\n          <td>{{ expense.date }}</td>\r\n          <td>{{ expense.description }}</td>\r\n          <td>{{ getCategoryName(expense.category_id) }}</td>\r\n          <td>{{ expense.amount }}</td>\r\n        </tr>\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <th>Total:</th>\r\n          <th></th>\r\n          <th></th>\r\n          <th>{{ totalExpenses }}</th>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  </div>\r\n</div>\r\n</div>\r\n</template>\r\n<script>\r\nimport { db } from '@/firebase.js'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      expenses: [],\r\n      categories: [],\r\n      selectedCategory: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchExpenses();\r\n    this.fetchCategories();\r\n  },\r\n  methods: {\r\n    fetchExpenses() {\r\n      const userId = this.$store.state.user.uid;\r\n      db.collection(\"users\").doc(userId).collection(\"expenses\").orderBy(\"date\", \"desc\").get().then(querySnapshot => {\r\n        let expenses = [];\r\n        querySnapshot.forEach(doc => {\r\n          expenses.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        this.expenses = expenses;\r\n      });\r\n    },\r\n    fetchCategories() {\r\n      const userId = this.$store.state.user.uid;\r\n      db.collection(\"users\").doc(userId).collection(\"categories\").orderBy(\"name\").get().then(querySnapshot => {\r\n        let categories = [];\r\n        querySnapshot.forEach(doc => {\r\n          categories.push({ id: doc.id, ...doc.data() });\r\n        });\r\n        this.categories = categories;\r\n      });\r\n    },\r\n    getCategoryName(categoryId) {\r\n      const category = this.categories.find(category => category.id === categoryId);\r\n      return category ? category.name : \"\";\r\n    }\r\n  },\r\n  computed: {\r\n    filteredExpenses() {\r\n      return this.selectedCategory\r\n        ? this.expenses.filter(expense => expense.category_id === this.selectedCategory)\r\n        : this.expenses;\r\n    },\r\n    totalExpenses() {\r\n      return this.expenses.reduce((total, expense) => total + parseFloat(expense.amount), 0);\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";AA4CA,SAASA,EAAC,QAAS,eAAc;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPF,aAAaA,CAAA,EAAG;MACd,MAAMG,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG;MACzCb,EAAE,CAACc,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACN,MAAM,CAAC,CAACK,UAAU,CAAC,UAAU,CAAC,CAACE,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,IAAI,CAACC,aAAY,IAAK;QAC5G,IAAIjB,QAAO,GAAI,EAAE;QACjBiB,aAAa,CAACC,OAAO,CAACL,GAAE,IAAK;UAC3Bb,QAAQ,CAACmB,IAAI,CAAC;YAAEC,EAAE,EAAEP,GAAG,CAACO,EAAE;YAAE,GAAGP,GAAG,CAACd,IAAI,CAAC;UAAE,CAAC,CAAC;QAC9C,CAAC,CAAC;QACF,IAAI,CAACC,QAAO,GAAIA,QAAQ;MAC1B,CAAC,CAAC;IACJ,CAAC;IACDK,eAAeA,CAAA,EAAG;MAChB,MAAME,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG;MACzCb,EAAE,CAACc,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACN,MAAM,CAAC,CAACK,UAAU,CAAC,YAAY,CAAC,CAACE,OAAO,CAAC,MAAM,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,IAAI,CAACC,aAAY,IAAK;QACtG,IAAIhB,UAAS,GAAI,EAAE;QACnBgB,aAAa,CAACC,OAAO,CAACL,GAAE,IAAK;UAC3BZ,UAAU,CAACkB,IAAI,CAAC;YAAEC,EAAE,EAAEP,GAAG,CAACO,EAAE;YAAE,GAAGP,GAAG,CAACd,IAAI,CAAC;UAAE,CAAC,CAAC;QAChD,CAAC,CAAC;QACF,IAAI,CAACE,UAAS,GAAIA,UAAU;MAC9B,CAAC,CAAC;IACJ,CAAC;IACDoB,eAAeA,CAACC,UAAU,EAAE;MAC1B,MAAMC,QAAO,GAAI,IAAI,CAACtB,UAAU,CAACuB,IAAI,CAACD,QAAO,IAAKA,QAAQ,CAACH,EAAC,KAAME,UAAU,CAAC;MAC7E,OAAOC,QAAO,GAAIA,QAAQ,CAACE,IAAG,GAAI,EAAE;IACtC;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACzB,gBAAe,GACvB,IAAI,CAACF,QAAQ,CAAC4B,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACC,WAAU,KAAM,IAAI,CAAC5B,gBAAgB,IAC7E,IAAI,CAACF,QAAQ;IACnB,CAAC;IACD+B,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAAC/B,QAAQ,CAACgC,MAAM,CAAC,CAACC,KAAK,EAAEJ,OAAO,KAAKI,KAAI,GAAIC,UAAU,CAACL,OAAO,CAACM,MAAM,CAAC,EAAE,CAAC,CAAC;IACxF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}